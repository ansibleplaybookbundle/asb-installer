---
- name: set ansible-service-broker image facts using set prefix and tag
  set_fact:
    ansible_service_broker_image: "{{ ansible_service_broker_image_prefix }}ansible-service-broker:{{ ansible_service_broker_image_tag }}"
    ansible_service_broker_etcd_image: "{{ ansible_service_broker_etcd_image_prefix }}etcd:{{ ansible_service_broker_etcd_image_tag }}"

- include_tasks: validate_facts.yml

- include_tasks: generate_certs.yml

- name: Create broker namespace
  openshift_v1_project:
    name: '{{ namespace }}'

- name: Switch to broker namespace
  shell: "oc project {{ namespace }}"

- name: get service-catalog-apiserver-token secret name
  shell: "oc get secret --no-headers=true -n kube-service-catalog | grep -m 1 service-catalog-apiserver-token | awk '{ print $1 }' | cat"
  register: cat_token_secret_name

- name: retrieve cert for cluster
  shell: "oc get secret {{ cat_token_secret_name.stdout }} -n kube-service-catalog -o yaml | grep service-ca.crt | awk '{ print $2 }' | cat"
  register: cluster_ca_cert_cat

- set_fact:
    cluster_ca_cert: "{{ cluster_ca_cert_cat.stdout }}"

- name: Curling ansible-service-broker-all.yaml
  get_url:
    url: "{{ deploy_broker_template_url }}"
    force: yes
    dest: "{{ deploy_broker_template_file }}"

- name: Run template to deploy broker
  shell: >
    oc process
    -n {{ namespace }}
    -p DOCKERHUB_ORG="{{ansible_service_broker_registry_organization}}"
    -p ENABLE_BASIC_AUTH="{{ ansible_service_broker_enable_basic_auth }}"
    -p ETCD_TRUSTED_CA_FILE=/var/run/etcd-auth-secret/ca.crt
    -p BROKER_CLIENT_CERT_PATH=/var/run/asb-etcd-auth/client.crt
    -p BROKER_CLIENT_KEY_PATH=/var/run/asb-etcd-auth/client.key
    -p ETCD_TRUSTED_CA="{{ etcd_ca_cert }}"
    -p BROKER_CLIENT_CERT="{{ etcd_client_cert }}"
    -p BROKER_CLIENT_KEY="{{ etcd_client_key }}"
    -p NAMESPACE={{ namespace }}
    -p BROKER_CA_CERT={{ cluster_ca_cert }}
    -f {{ deploy_broker_template_file }} | oc create -f -

